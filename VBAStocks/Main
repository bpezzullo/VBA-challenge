Sub Main()
Dim D_increase As Double, D_decrease As Double, D_volume As Double
Dim I_stck_n As String, D_stck_n As String, V_stck_n As String

'Loop through all the sheets  For i = 1 To 1

For i = 1 To Application.Sheets.Count
    Worksheets(i).Activate
    Call Calculate(D_increase, D_decrease, D_volume, I_stck_n, D_stck_n, V_stck_n)
    'MsgBox ("Sheet " & i + 1 & " done" & Worksheets(i + 1).Name)
    'MsgBox ("For Sheet " & Worksheets(i).Name & " Stock with maximum percentage increase is " & D_increase)
    'MsgBox ("For Sheet " & Worksheets(i).Name & " Stock with maximum percentage decrease is " & D_decrease)
    'MsgBox ("For Sheet " & Worksheets(i).Name & " Stock with maximum volume is " & D_volume)
Next i


End Sub


Sub Calculate(Increase As Double, Decrease As Double, Volume As Double, I_stck As String, D_stck As String, V_stck As String)

Dim Ticker_cell As Integer          'Ticker_cell keeps track on what row to store the results on the spreadsheet.
Dim Start As String                 'Start is the current ticker name
Dim Found As String                 'Found is the next Ticker symbol found from the function
Dim rowct As Long                   'Rowct is used to determine where in the spreadsheet the Ticker changes.
Dim continue As Boolean             'Continue is used to control the loop
Dim Year As Integer                 ' The year to search for
Dim Volcell2 As String              ' Not needed
Dim test As String
Dim cur_range As String

'Initialize variables

Ticker_cell = 2                         ' Start with the second row
rowct = 1                               ' Start with 1
Found = Cells(1, rowct).Value           ' Set Found with the dummy label. I used the first cell
Start = Found                           '
continue = True                         ' set the while flag to the initial value

range("I:P").ClearContents              ' Clear where the results will be

range("I1") = "Ticker"                  ' Label the result Columns
range("J1") = "Yearly Change"
range("K1") = "Percent Change"
range("L1") = "Volume"
range("O1") = "Ticker"
range("P1") = "Value"
range("I1:P1").Font.Bold = True
range("N2") = "Greatest % Increase"
range("N3") = "Greatest % Decrease"
range("N4") = "Greatest Volume"
range("N2").Font.Bold = True
range("N3").Font.Bold = True
range("N4").Font.Bold = True
range("N2:N4").ShrinkToFit = True
range("J1:K1").WrapText = True
range("J1:L1").ShrinkToFit = True
range("P2:P3").NumberFormat = "0.00%"



' Loop until the end of the spreadsheet
' Call the function Identity_ticker to find the next company.  Store the row information to determine where
' the comapny starts or stops in the spreadsheet

Do While continue = True

 ' Need to find the row of the next Ticker symbol.   Call the Function Identify_ticker passing in the current sticker
 ' and the rowcount to start looking from.
 
 rowct = Identify_ticker(Start, rowct)   ' start from the last spot rowct
 Found = Cells(rowct, 1).Value                  ' Change of ticker symbol so save it in the appropriate row
 Cells(Ticker_cell, 9).Value = Found            ' Place in the spreadsheet at the appropriate location

 Cells(Ticker_cell, 20).Value = rowct           ' Need to convert this to an array instead of saving on the spreadsheet
 
  
 If rowct > 2 Then
    ' Not sure I have too, but sorting information.  If needed it would be done now. Or could sort at the very beginning
    ' Dim strDataRange As Range
    ' Dim keyRange As range
    ' Set strDataRange = range("Your Data Range")
    ' Set keyRange = range("Your Sort by Column")
    ' strDataRange.Sort Key1:=keyRange, Header:=xlYes
    
    
    'MsgBox (Str(rowct) + Str(Ticker_cell) + Str(Cells(Ticker_cell - 1, 20).Value) + Str(Cells(rowct - 1, 6).Value)) + Str(Cells(Cells(Ticker_cell - 1, 20).Value, 3).Value)
    Cells(Ticker_cell - 1, 10).Value = Cells(rowct - 1, 6).Value - Cells(Cells(Ticker_cell - 1, 20).Value, 3).Value
        If Cells(Cells(Ticker_cell - 1, 20).Value, 3).Value <> 0 Then
        Cells(Ticker_cell - 1, 11).Value = Cells(Ticker_cell - 1, 10).Value / Cells(Cells(Ticker_cell - 1, 20).Value, 3).Value
    Else
        Cells(Ticker_cell - 1, 11).Value = 0
    End If
 
    'Sum up the volume.  Created my own procedure, but could of used excel function
    Cells(Ticker_cell - 1, 12).Value = Sum_man(Cells(Ticker_cell - 1, 20).Value, rowct - 1)
    
    End If
 
 ' Increase the row for the next ticker symbol
 Ticker_cell = Ticker_cell + 1
 
 ' reset the Start variable for the while loop
 
 Start = Found
 
 ' Are we at the end of the spreadsheet. If so jump out of the while loop
  'If Found = "AAN" Then continue = False       ' This is for debugging
  
  If Found = "" Then continue = False           ' The last cell will return "".  If at end set the continue flag to stop the while loop

 ' Get the next sticker
 Loop
 
 ' Find the maximum and minimum % increases
 
 temp = get_max(11, 2, Ticker_cell)
 
  range("O2").Value = Cells(temp, 9).Value
  range("P2").Value = Cells(temp, 11).Value
 
 
 temp = get_min(11, 2, Ticker_cell)
 
  range("O3").Value = Cells(temp, 9).Value
  range("P3").Value = Cells(temp, 11).Value

' Find the maximum volume

 temp = get_max(12, 2, Ticker_cell)
 
  range("O4").Value = Cells(temp, 9).Value
  range("P4").Value = Cells(temp, 12).Value

 ' Highlight the percentages and clean-up
 
 Call highlight(2, Ticker_cell)

End Sub

Function Identify_ticker(Start As String, rowct As Long) As Long

' Find the next ticker

Dim Hold As String                                  ' Hold is a temporary field
Dim i As Long                                       ' variable to help count
Dim ticker_continue As Boolean                      ' Continue flag for while loop

i = rowct                                           ' Start at the last know location in the spreadsheet
ticker_continue = True                              ' Loop while continueis True

' Loop until the next sysmbol
Do While ticker_continue = True

 Hold = Cells(i, 1).Value
 If Start <> Hold Then                              ' Found a new ticker symbol
    Identify_ticker = i                             ' return the row of the new ticker symbol
    ticker_continue = False                         ' Exit from the function
 Else
    i = i + 1                                       'step down to the next row
 End If

Loop

End Function

Function Sum_man(First As Long, Second As Long) As Double
' Sum up the range of cells provided with the input.  From Row First to row Second in column 7 or G.

' Setup needed Variables.
Dim result As Double

' Initialize result to 0
result = 0
 
For i = First To Second
 result = result + Cells(i, 7).Value
 Next i
 
' Return result
Sum_man = result

End Function

Private Sub highlight(min As Integer, max As Integer)

Dim rng As range, cell As range
Dim rangeinfo As String
Dim Las As String

Cells.Interior.ColorIndex = 0

rangeinfo = cellval("J", min) + ":" + cellval("J", max)

Set rng = range(rangeinfo)

For Each cell In rng

    If cell.Value > 0 Then
        cell.Interior.ColorIndex = 4
    End If
    If cell.Value < 0 Then
        cell.Interior.ColorIndex = 3
    End If
        
Next cell

rangeinfo = cellval("K", min) + ":" + cellval("K", max)

Set rng = range(rangeinfo)

rng.NumberFormat = "0.00%"

Set rng = range("T:T")
rng.ClearContents

End Sub

Function cellval(letter As String, row As Integer) As String

cellval = letter + CStr(row)

End Function


Function get_max(col As Integer, first_row As Integer, last_row As Integer) As Integer
' find the maximum value and return the row that the value was found in.

Dim i As Integer
Dim temp As Double

temp = Cells(first_row, col).Value              ' start with the first cell as the temp
get_max = first_row

For i = first_row To last_row                   ' loop through the column provided

If Cells(i, col).Value > temp Then              ' If value is greater than temp
    get_max = i                                 ' capture the row
    temp = Cells(i, col).Value                  ' capture the new temp value
    End If
Next i

End Function


Function get_min(col As Integer, first_row As Integer, last_row As Integer) As Integer
' find the minimum value and return the row that the value was found in.

Dim i As Integer
Dim temp As Double

temp = Cells(first_row, col).Value              ' start with the first cell as the temp
get_min = first_row

For i = first_row To last_row                   ' loop through the column provided

If Cells(i, col).Value < temp Then              ' If value is lesser than temp
    get_min = i                                 ' capture the row
    temp = Cells(i, col).Value                  ' capture the new temp value
    End If
Next i

End Function








